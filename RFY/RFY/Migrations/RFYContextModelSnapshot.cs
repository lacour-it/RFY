// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RFY.Data;

namespace RFY.Migrations
{
    [DbContext(typeof(RFYContext))]
    partial class RFYContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RFY.Models.NetworkInterface", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnyCastAddress");

                    b.Property<string>("DHCPServerAddresses");

                    b.Property<string>("DNSServerAddresses");

                    b.Property<string>("DNSSuffix");

                    b.Property<string>("Description");

                    b.Property<string>("GatewayAddresses");

                    b.Property<string>("IPAddress");

                    b.Property<string>("IPAddressV6");

                    b.Property<string>("InterfaceName");

                    b.Property<string>("InterfaceType");

                    b.Property<bool>("IsDHCPEnabled");

                    b.Property<bool>("IsDNSEnabled");

                    b.Property<string>("MulticastAddresses");

                    b.Property<string>("OperationalStatus");

                    b.Property<string>("Speed");

                    b.Property<string>("UniCastAddresses");

                    b.Property<string>("WinServerAddresses");

                    b.HasKey("ID");

                    b.ToTable("NetworkInterfaces");
                });
#pragma warning restore 612, 618
        }
    }
}
